name: "Prepare release"

on:
  push:
    branches:
      - 'release/**'

jobs:
  test-helm:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build App
        run: |
          make build
      - name: Test App
        run: |
          make test-helm
  test-kustomize:
    needs: test-helm
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build App
        run: |
          make build
      - name: Test App
        run: |
          make test-kustomize

  test-kubectl:
    needs: test-kustomize
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build App
        run: |
          make build
      - name: Test App
        run: |
          make test-kubectl
  test-helmfile:
    needs: test-kubectl
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build App
        run: |
          make build
      - name: Test App
        run: |
          make test-helmfile
  prepare-release:
    name: "Starting release"
    needs: [test-helm, test-kustomize, test-kubectl, test-helmfile]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Update version
        run: |
          git config --local user.name '${{ env.GIT_COMMITER_NAME }}'
          git config --local user.email '${{ env.GIT_COMMITER_EMAIL }}'
          git config --local author.name '${{ env.GIT_AUTHOR_NAME }}'
          git config --local author.name '${{ env.GIT_AUTHOR_EMAIL }}'
          make update-build-version BUILD_VERSION=$(grep -oP '\d+\.\d+\.\d+.*$' <<< ${{ github.ref }})
          make update-readme-version BUILD_VERSION=$(grep -oP '\d+\.\d+\.\d+.*$' <<< ${{ github.ref }})
          make commit-version
        env:
          GIT_COMMITER_NAME: "GitHub"
          GIT_COMMITER_EMAIL: "noreply@github.com"
          GIT_AUTHOR_NAME: "github-actions[bot]"
          GIT_AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Create pull request to master
        id: create-pull-request-to-master
        uses: vsoch/pull-request-action@1.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BRANCH: master